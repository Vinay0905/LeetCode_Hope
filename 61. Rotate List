/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if (!head || !head->next || k == 0) return head; 

        ListNode* curr = head;
        int count = 1;
        while (curr->next != nullptr) {  
            curr = curr->next;
            count++;
        }

        k = k % count;
        if (k == 0) return head;  

        curr->next = head;  
        
        curr = head;
        int j = count - k - 1;
        while (j--) {  
            curr = curr->next;
        }

        ListNode* newHead = curr->next;  
        curr->next = nullptr;  

        return newHead;
    }
};
