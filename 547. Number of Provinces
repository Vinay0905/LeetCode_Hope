class Solution {
public:
    int findCircleNum(vector<vector<int>>& isConnected) {
        int n = isConnected.size(), provinces = 0;
        vector<bool> visited(n, false); 

        for (int city = 0; city < n; city++) {
            if (!visited[city]) {
                provinces++;
                dfs(n, city, isConnected, visited);
            }
        }
        return provinces; 
    }

private:
    void dfs(int n, int city, vector<vector<int>>& isConnected, vector<bool>& visited) {
        visited[city] = true;
        for (int othercity = 0; othercity < n; othercity++) {
            if (!visited[othercity] && isConnected[city][othercity] == 1) {
                dfs(n, othercity, isConnected, visited);
            }
        }
    }
};
